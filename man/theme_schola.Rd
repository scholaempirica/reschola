% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/theme.R
\name{theme_schola}
\alias{theme_schola}
\title{A Schola Empirica ggplot2 theme}
\usage{
theme_schola(
  gridlines = c("y", "x", "both", "scatter"),
  base_size = 11,
  family = "Ubuntu Condensed",
  title_family = "Ubuntu",
  margins = TRUE,
  plot.title.position = "plot",
  axis_titles = TRUE,
  multiplot = FALSE,
  ...
)
}
\arguments{
\item{gridlines}{Whether to display major gridlines along \code{"y"} (the
default), \code{"x"}, \code{"both"} or draw a \code{"scatter"}, which has both gridlines
and inverted colours.}

\item{base_size}{Numeric text size in pts, affects all text in plot. Defaults
to 11.}

\item{family, title_family}{font family to use for the (title of the) plot.
Defaults to \code{"Ubuntu"} for title and \code{"Ubuntu Condensed"} for plot.}

\item{margins}{\emph{logical}, whether to draw margins around the plot or not (the
default).}

\item{plot.title.position}{where to align the title. Either "plot" (the
default, difference from \code{theme()} default) or \code{"panel"}.}

\item{axis_titles}{\emph{logical}, draw axis titles? Defaults to \code{TRUE}.}

\item{multiplot}{if set to TRUE, provides better styling for small multiples
created using \verb{facet_*}.}

\item{...}{
  Arguments passed on to \code{\link[ggplot2:theme]{ggplot2::theme}}
  \describe{
    \item{\code{line}}{all line elements (\code{\link[ggplot2:element_line]{element_line()}})}
    \item{\code{rect}}{all rectangular elements (\code{\link[ggplot2:element_rect]{element_rect()}})}
    \item{\code{title}}{all title elements: plot, axes, legends (\code{\link[ggplot2:element_text]{element_text()}};
inherits from \code{text})}
    \item{\code{point}}{all point elements (\code{\link[ggplot2:element_point]{element_point()}})}
    \item{\code{polygon}}{all polygon elements (\code{\link[ggplot2:element_polygon]{element_polygon()}})}
    \item{\code{geom}}{defaults for geoms (\code{\link[ggplot2:element_geom]{element_geom()}})}
    \item{\code{spacing}}{all spacings (\code{\link[grid:unit]{unit()}})}
    \item{\code{aspect.ratio}}{aspect ratio of the panel}
    \item{\code{axis.text,axis.text.x,axis.text.y,axis.text.x.top,axis.text.x.bottom,axis.text.y.left,axis.text.y.right,axis.text.theta,axis.text.r}}{tick labels along axes (\code{\link[ggplot2:element_text]{element_text()}}). Specify all axis tick labels (\code{axis.text}),
tick labels by plane (using \code{axis.text.x} or \code{axis.text.y}), or individually
for each axis (using \code{axis.text.x.bottom}, \code{axis.text.x.top},
\code{axis.text.y.left}, \code{axis.text.y.right}). \verb{axis.text.*.*} inherits from
\verb{axis.text.*} which inherits from \code{axis.text}, which in turn inherits
from \code{text}}
    \item{\code{axis.ticks,axis.ticks.x,axis.ticks.x.top,axis.ticks.x.bottom,axis.ticks.y,axis.ticks.y.left,axis.ticks.y.right,axis.ticks.theta,axis.ticks.r}}{tick marks along axes (\code{\link[ggplot2:element_line]{element_line()}}). Specify all tick marks (\code{axis.ticks}),
ticks by plane (using \code{axis.ticks.x} or \code{axis.ticks.y}), or individually
for each axis (using \code{axis.ticks.x.bottom}, \code{axis.ticks.x.top},
\code{axis.ticks.y.left}, \code{axis.ticks.y.right}). \verb{axis.ticks.*.*} inherits from
\verb{axis.ticks.*} which inherits from \code{axis.ticks}, which in turn inherits
from \code{line}}
    \item{\code{axis.minor.ticks.x.top,axis.minor.ticks.x.bottom,axis.minor.ticks.y.left,axis.minor.ticks.y.right,axis.minor.ticks.theta,axis.minor.ticks.r}}{minor tick marks along axes (\code{\link[ggplot2:element_line]{element_line()}}). \verb{axis.minor.ticks.*.*}
inherit from the corresponding major ticks \verb{axis.ticks.*.*}.}
    \item{\code{axis.ticks.length,axis.ticks.length.x,axis.ticks.length.x.top,axis.ticks.length.x.bottom,axis.ticks.length.y,axis.ticks.length.y.left,axis.ticks.length.y.right,axis.ticks.length.theta,axis.ticks.length.r}}{length of tick marks (\code{unit}). \code{axis.ticks.length} inherits from \code{spacing}.}
    \item{\code{axis.minor.ticks.length,axis.minor.ticks.length.x,axis.minor.ticks.length.x.top,axis.minor.ticks.length.x.bottom,axis.minor.ticks.length.y,axis.minor.ticks.length.y.left,axis.minor.ticks.length.y.right,axis.minor.ticks.length.theta,axis.minor.ticks.length.r}}{length of minor tick marks (\code{unit}), or relative to \code{axis.ticks.length} when provided with \code{rel()}.}
    \item{\code{axis.line,axis.line.x,axis.line.x.top,axis.line.x.bottom,axis.line.y,axis.line.y.left,axis.line.y.right,axis.line.theta,axis.line.r}}{lines along axes (\code{\link[ggplot2:element_line]{element_line()}}). Specify lines along all axes (\code{axis.line}),
lines for each plane (using \code{axis.line.x} or \code{axis.line.y}), or individually
for each axis (using \code{axis.line.x.bottom}, \code{axis.line.x.top},
\code{axis.line.y.left}, \code{axis.line.y.right}). \verb{axis.line.*.*} inherits from
\verb{axis.line.*} which inherits from \code{axis.line}, which in turn inherits
from \code{line}}
    \item{\code{legend.background}}{background of legend (\code{\link[ggplot2:element_rect]{element_rect()}}; inherits
from \code{rect})}
    \item{\code{legend.margin}}{the margin around each legend (\code{\link[ggplot2:margin]{margin()}}); inherits
from \code{margins}.}
    \item{\code{legend.spacing,legend.spacing.x,legend.spacing.y}}{the spacing between legends (\code{unit}). \code{legend.spacing.x} & \code{legend.spacing.y}
inherit from \code{legend.spacing} or can be specified separately.
\code{legend.spacing} inherits from \code{spacing}.}
    \item{\code{legend.key}}{background underneath legend keys (\code{\link[ggplot2:element_rect]{element_rect()}};
inherits from \code{rect})}
    \item{\code{legend.key.size,legend.key.height,legend.key.width}}{size of legend keys (\code{unit}); key background height & width inherit from
\code{legend.key.size} or can be specified separately. In turn \code{legend.key.size}
inherits from \code{spacing}.}
    \item{\code{legend.key.spacing,legend.key.spacing.x,legend.key.spacing.y}}{spacing
between legend keys given as a \code{unit}. Spacing in the horizontal (x) and
vertical (y) direction inherit from \code{legend.key.spacing} or can be
specified separately. \code{legend.key.spacing} inherits from \code{spacing}.}
    \item{\code{legend.key.justification}}{Justification for positioning legend keys
when more space is available than needed for display. The default, \code{NULL},
stretches keys into the available space. Can be a location like \code{"center"}
or \code{"top"}, or a two-element numeric vector.}
    \item{\code{legend.frame}}{frame drawn around the bar (\code{\link[ggplot2:element_rect]{element_rect()}}).}
    \item{\code{legend.ticks}}{tick marks shown along bars or axes (\code{\link[ggplot2:element_line]{element_line()}})}
    \item{\code{legend.ticks.length}}{length of tick marks in legend
(\code{\link[grid:unit]{unit()}}); inherits from \code{legend.key.size}.}
    \item{\code{legend.axis.line}}{lines along axes in legends (\code{\link[ggplot2:element_line]{element_line()}})}
    \item{\code{legend.text}}{legend item labels (\code{\link[ggplot2:element_text]{element_text()}}; inherits from
\code{text})}
    \item{\code{legend.text.position}}{placement of legend text relative to legend keys
or bars ("top", "right", "bottom" or "left"). The legend text placement
might be incompatible with the legend's direction for some guides.}
    \item{\code{legend.title}}{title of legend (\code{\link[ggplot2:element_text]{element_text()}}; inherits from
\code{title})}
    \item{\code{legend.title.position}}{placement of legend title relative to the main
legend ("top", "right", "bottom" or "left").}
    \item{\code{legend.position}}{the default position of legends ("none", "left",
"right", "bottom", "top", "inside")}
    \item{\code{legend.position.inside}}{A numeric vector of length two setting the
placement of legends that have the \code{"inside"} position.}
    \item{\code{legend.direction}}{layout of items in legends ("horizontal" or
"vertical")}
    \item{\code{legend.byrow}}{whether the legend-matrix is filled by columns
(\code{FALSE}, the default) or by rows (\code{TRUE}).}
    \item{\code{legend.justification}}{anchor point for positioning legend inside plot
("center" or two-element numeric vector) or the justification according to
the plot area when positioned outside the plot}
    \item{\code{legend.justification.top,legend.justification.bottom,legend.justification.left,legend.justification.right,legend.justification.inside}}{Same as \code{legend.justification} but specified per \code{legend.position} option.}
    \item{\code{legend.location}}{Relative placement of legends outside the plot as a
string. Can be \code{"panel"} (default) to align legends to the panels or
\code{"plot"} to align legends to the plot as a whole.}
    \item{\code{legend.box}}{arrangement of multiple legends ("horizontal" or
"vertical")}
    \item{\code{legend.box.just}}{justification of each legend within the overall
bounding box, when there are multiple legends ("top", "bottom", "left",
"right", "center" or "centre")}
    \item{\code{legend.box.margin}}{margins around the full legend area, as specified
using \code{\link[ggplot2:margin]{margin()}}; inherits from \code{margins}.}
    \item{\code{legend.box.background}}{background of legend area (\code{\link[ggplot2:element_rect]{element_rect()}};
inherits from \code{rect})}
    \item{\code{legend.box.spacing}}{The spacing between the plotting area and the
legend box (\code{unit}); inherits from \code{spacing}.}
    \item{\code{panel.border}}{border around plotting area, drawn on top of plot so that
it covers tick marks and grid lines. This should be used with
\code{fill = NA}
(\code{\link[ggplot2:element_rect]{element_rect()}}; inherits from \code{rect})}
    \item{\code{panel.spacing,panel.spacing.x,panel.spacing.y}}{spacing between facet
panels (\code{unit}). \code{panel.spacing.x} & \code{panel.spacing.y} inherit from \code{panel.spacing}
or can be specified separately. \code{panel.spacing} inherits from \code{spacing}.}
    \item{\code{panel.ontop}}{option to place the panel (background, gridlines) over
the data layers (\code{logical}). Usually used with a transparent or blank
\code{panel.background}.}
    \item{\code{panel.widths,panel.heights}}{Sizes for panels (\code{units}). Can be a
single unit to set the total size for the panel area, or a unit vector to
set the size of individual panels.}
    \item{\code{plot.background}}{background of the entire plot (\code{\link[ggplot2:element_rect]{element_rect()}};
inherits from \code{rect})}
    \item{\code{plot.title.position,plot.caption.position}}{Alignment of the plot title/subtitle
and caption.  The setting for \code{plot.title.position} applies to both
the title and the subtitle. A value of "panel" (the default) means that
titles and/or caption are aligned to the plot panels. A value of "plot" means
that titles and/or caption are aligned to the entire plot (minus any space
for margins and plot tag).}
    \item{\code{plot.subtitle}}{plot subtitle (text appearance) (\code{\link[ggplot2:element_text]{element_text()}};
inherits from \code{title}) left-aligned by default}
    \item{\code{plot.caption}}{caption below the plot (text appearance)
(\code{\link[ggplot2:element_text]{element_text()}}; inherits from \code{title}) right-aligned by default}
    \item{\code{plot.tag}}{upper-left label to identify a plot (text appearance)
(\code{\link[ggplot2:element_text]{element_text()}}; inherits from \code{title}) left-aligned by default}
    \item{\code{plot.tag.position}}{The position of the tag as a string ("topleft",
"top", "topright", "left", "right", "bottomleft", "bottom", "bottomright")
or a coordinate. If a coordinate, can be a numeric vector of length 2 to
set the x,y-coordinate relative to the whole plot. The coordinate option
is unavailable for \code{plot.tag.location = "margin"}.}
    \item{\code{plot.tag.location}}{The placement of the tag as a string, one of
\code{"panel"}, \code{"plot"} or \code{"margin"}. Respectively, these will place the tag
inside the panel space, anywhere in the plot as a whole, or in the margin
around the panel space.}
    \item{\code{strip.clip}}{should strip background edges and strip labels be clipped
to the extend of the strip background? Options are \code{"on"} to clip, \code{"off"}
to disable clipping or \code{"inherit"} (default) to take the clipping setting
from the parent viewport.}
    \item{\code{strip.placement}}{placement of strip with respect to axes,
either "inside" or "outside". Only important when axes and strips are
on the same side of the plot.}
    \item{\code{strip.text,strip.text.x,strip.text.y,strip.text.x.top,strip.text.x.bottom,strip.text.y.left,strip.text.y.right}}{facet labels (\code{\link[ggplot2:element_text]{element_text()}}; inherits from  \code{text}). Horizontal facet labels (\code{strip.text.x}) & vertical
facet labels (\code{strip.text.y}) inherit from \code{strip.text} or can be specified
separately. Facet strips have dedicated position-dependent theme elements
(\code{strip.text.x.top}, \code{strip.text.x.bottom}, \code{strip.text.y.left}, \code{strip.text.y.right})
that inherit from \code{strip.text.x} and \code{strip.text.y}, respectively.
As a consequence, some theme stylings need to be applied to
the position-dependent elements rather than to the parent elements}
    \item{\code{strip.switch.pad.grid,strip.switch.pad.wrap}}{space between strips and
axes when strips are switched (\code{unit}); inherits from \code{spacing}.}
    \item{\code{complete}}{set this to \code{TRUE} if this is a complete theme, such as
the one returned by \code{\link[ggplot2:theme_grey]{theme_grey()}}. Complete themes behave
differently when added to a ggplot object. Also, when setting
\code{complete = TRUE} all elements will be set to inherit from blank
elements.}
    \item{\code{validate}}{\code{TRUE} to run \code{check_element()}, \code{FALSE} to bypass checks.}
  }}
}
\value{
a ggtheme object
}
\description{
A wrapper around \code{theme()} which provides several shortcuts to setting common
options and several defaults. See more in Details.
}
\details{
In particular, the theme: - displays only major gridlines, allowing you to
quickly switch which ones; gridlines are thinner, panel has white background
\itemize{
\item provides quick option to draw a scatter with grey background - switches
defaults for title alignment - turns axis labels off by default: in practice,
x axes are often obvious and y axes are better documented in a subtitle -
sets backgrounds to a schola-style shade - sets plot title in bold and 120\%
of base_size
}

All the changed defaults can be overriden by another call to \code{theme()}.

See "Making charts" vignette for more complex examples: \code{vignette('charts', package = 'reschola')}.
}
\note{
The default fonts - Ubuntu and Ubuntu Condensed - are contained in this
package and can be registered with the system using
\code{register_reschola_fonts()}. You should then install them onto your system
like any font, using files in the directories described in the
\code{register_reschola_fonts()} messsage.
}
\examples{
library(ggplot2)

# NOTE when `theme_schola()` is used in these examples, fonts
# are set to 'sans' to pass checks on computers without the
# Ubuntu included. If you have these fonts (see Note) you can
# leave these parameters at their default values.

use_reschola_fonts("sans")

# the basic plot for illustration, theme not used

p <- ggplot(mpg) +
  geom_bar(aes(y = class)) +
  labs(title = "Lots of cars", subtitle = "Count of numbers")

# using `theme_schola()` defaults

p +
  theme_schola("x", family = "sans", title_family = "sans")

# in combination with `flush_axis`:

p +
  theme_schola("x", family = "sans", title_family = "sans") +
  scale_x_continuous(expand = flush_axis)

# scatter

ggplot(mpg) +
  geom_point(aes(cty, hwy)) +
  theme_schola("scatter", family = "sans", title_family = "sans") +
  labs(title = "Lots of cars", subtitle = "Point by point")

# Smaller text, flush alignment

ggplot(mpg) +
  geom_point(aes(cty, hwy)) +
  theme_schola("scatter",
    base_size = 9, family = "sans", title_family = "sans"
  ) +
  labs(title = "Lots of cars", subtitle = "Point by point")

# Override defaults changed inside `theme_schola()`

ggplot(mpg) +
  geom_point(aes(cty, hwy)) +
  theme_schola("scatter",
    base_size = 9, family = "sans", title_family = "sans"
  ) +
  labs(title = "Lots of cars", subtitle = "Point by point") +
  theme(panel.background = element_rect(fill = "lightpink"))
}
\seealso{
Other Making charts: 
\code{\link{flush_axis}},
\code{\link{plot_lollipop}()},
\code{\link{prepare_lollipop_data}()},
\code{\link{schola_barplot}()}
}
\concept{Making charts}
